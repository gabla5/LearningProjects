@model SportsStore.Domain.Entities.ShippingDetails

@{
    ViewBag.Title = "Checkout";
}

<h2>Checkout</h2>

Please enter your shipping information

<br />

@using (Html.BeginForm(MVC.Cart.Checkout(this.ViewData["ReturnUrl"].ToString(), null, null), FormMethod.Post))
{
    @Html.ValidationSummary(false)

    <fieldset>
        <legend>Shipping Details</legend>

        <h3>Ship to:</h3>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <h3>Address:</h3>

        <div class="editor-label">
            @Html.LabelFor(model => model.Line1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Line1)
            @Html.ValidationMessageFor(model => model.Line1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Line2)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Line2)
            @Html.ValidationMessageFor(model => model.Line2)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Line3)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Line3)
            @Html.ValidationMessageFor(model => model.Line3)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.City)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.State)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.State)
            @Html.ValidationMessageFor(model => model.State)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Zip)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Zip)
            @Html.ValidationMessageFor(model => model.Zip)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Country)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Country)
            @Html.ValidationMessageFor(model => model.Country)
        </div>

        <h3>Options:</h3>

        <div class="editor-label">
            @Html.LabelFor(model => model.Wrap)
        </div>

        <div class="editor-field">
            @Html.EditorFor(model => model.Wrap)
            @Html.ValidationMessageFor(model => model.Wrap)
        </div>

        <p>
            <input type="submit" value="Continue" class="actionButtons" />
        </p>
    </fieldset>
}

<div class="actionButtons">
    @Html.ActionLink("Cancel", MVC.Cart.Index(null, this.ViewData["ReturnUrl"].ToString()))
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
